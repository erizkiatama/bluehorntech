services:
  db:
    image: postgres:15-alpine
    container_name: evv_db
    environment:
      POSTGRES_DB: bluehorntech
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d  # Fixed path
    networks:
      - evv_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d bluehorntech"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: dev.Dockerfile
    container_name: evv_backend
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/tmp
      - backend_modules:/go/pkg/mod
    networks:
      - evv_network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: dev.Dockerfile
    container_name: evv_frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    networks:
      - evv_network
    environment:
      - REACT_APP_API_BASE_URL=http://backend:8080
      - CHOKIDAR_USEPOLLING=true
      - WDS_SOCKET_HOST=localhost
      - FAST_REFRESH=false
    restart: unless-stopped
    stdin_open: true
    tty: true

volumes:
  postgres_data:
    driver: local
  frontend_node_modules:
    driver: local
  backend_modules:
    driver: local
    
networks:
  evv_network:
    driver: bridge
